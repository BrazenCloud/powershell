{
    "x-generator": "NSwag v13.14.8.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v12.0.0.0))",
    "swagger": "2.0",
    "info": {
        "version": "2.0",
        "title": "Runway API"
    },
    "host": "portal.brazencloud.com",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "parameters": {
        "platform": {
            "in": "query",
            "type": "string",
            "x-nullable": false,
            "description": "",
            "enum": [
                "Agnostic",
                "Cloud",
                "Windows64",
                "Windows32",
                "Linux64",
                "Linux32",
                "MacOS",
                "Android",
                "iOS",
                "Debian64",
                "Debian32",
                "Centos64",
                "FreeBSD64"
            ],
            "name": "platform"
        }
    },
    "paths": {
        "/api/v2/accounts": {
            "delete": {
                "tags": [
                    "AccountAsset"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "AccountAsset_DeleteBySet",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            },
            "get": {
                "tags": [
                    "AccountAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIAccountAssetQueryView"
                        }
                    }
                },
                "operationId": "AccountAsset_List",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/accounts/{accountId}": {
            "delete": {
                "tags": [
                    "AccountAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "AccountAsset_DeleteById",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "accountId"
                    }
                ]
            },
            "get": {
                "tags": [
                    "AccountAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayAccountAsset"
                        }
                    }
                },
                "operationId": "AccountAsset_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "accountId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/accounts/count": {
            "get": {
                "tags": [
                    "AccountAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "AccountAsset_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/accounts/count/query": {
            "post": {
                "operationId": "AccountAsset_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "AccountAsset"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/accounts/query": {
            "post": {
                "operationId": "AccountAsset_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIAccountAssetQueryView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "AccountAsset"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/accounts/query/schema": {
            "get": {
                "tags": [
                    "AccountAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "AccountAsset_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/accounts/query/set/{setId}": {
            "post": {
                "operationId": "AccountAsset_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "AccountAsset"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/accounts/tags": {
            "get": {
                "tags": [
                    "AccountAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "AccountAsset_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/assets/map": {
            "post": {
                "tags": [
                    "Asset"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Asset_MapAssets",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/AssetMap"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/assets/map/query": {
            "post": {
                "operationId": "Asset_QueryMap",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfAssetMapEndpointView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Asset"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/assets/map/schema": {
            "get": {
                "tags": [
                    "Asset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Asset_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/activate": {
            "post": {
                "operationId": "Authentication_Activate",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ActivateUserRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/admin-password-reset": {
            "post": {
                "operationId": "Authentication_AdminResetPassword",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ResetPasswordRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/change-password": {
            "post": {
                "operationId": "Authentication_ChangePassword",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ResetPasswordRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/enroll": {
            "post": {
                "operationId": "Authentication_Enroll",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/EnrollResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/EnrollRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/login": {
            "post": {
                "operationId": "Authentication_Login",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "operationId": "Authentication_Logout",
                "description": "Terminate the current user session.",
                "summary": "Authentication_Logout",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                }
            }
        },
        "/api/v2/auth/node": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayNode"
                        }
                    }
                },
                "operationId": "Authentication_GetCurrentNodeStatus",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/node/utility": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    }
                },
                "operationId": "Authentication_CreateUtilityNode",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/password-reset": {
            "post": {
                "operationId": "Authentication_ResetPassword",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ResetPasswordRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/password-strength/{password}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Authentication_GetPasswordStrength",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "password"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/ping": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "Authentication_Ping"
            }
        },
        "/api/v2/auth/unique-identity/{email}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "operationId": "Authentication_IsEmailUnique",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "email"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayUser"
                        }
                    }
                },
                "operationId": "Authentication_GetCurrentUser",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/client/close_stream": {
            "post": {
                "tags": [
                    "Client"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "Client_CloseStream",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloseStreamRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/client/datahub/status": {
            "post": {
                "operationId": "Client_CheckDatahubStatus",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/DatahubStatusResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "tags": [
                    "Client"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/DatahubStatusRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/client/socket": {
            "get": {
                "tags": [
                    "Client"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "Client_Socket"
            }
        },
        "/api/v2/client/socket_web/{stream}": {
            "get": {
                "tags": [
                    "Client"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "Client_SocketWeb",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "stream"
                    }
                ]
            }
        },
        "/api/v2/client/socket2/{stream}": {
            "get": {
                "tags": [
                    "Client"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "Client_Socket2",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "stream"
                    }
                ]
            }
        },
        "/api/v2/connections": {
            "post": {
                "operationId": "Connection_Create",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/IdResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Connection"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CreateConnectionRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "tags": [
                    "Connection"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIConnectionQueryView"
                        }
                    }
                },
                "operationId": "Connection_List",
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": [
                    "Connection"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Connection_DeleteBySet",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            }
        },
        "/api/v2/connections/{connectionId}": {
            "get": {
                "tags": [
                    "Connection"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayConnection"
                        }
                    }
                },
                "operationId": "Connection_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "connectionId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": [
                    "Connection"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Connection_DeleteById",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "connectionId"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Connection"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Connection_Update",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "connectionId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateConnectionRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/connections/count": {
            "get": {
                "tags": [
                    "Connection"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Connection_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/connections/count/query": {
            "post": {
                "operationId": "Connection_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Connection"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/connections/query": {
            "post": {
                "operationId": "Connection_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIConnectionQueryView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Connection"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/connections/query/schema": {
            "get": {
                "tags": [
                    "Connection"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Connection_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/connections/query/set/{setId}": {
            "post": {
                "operationId": "Connection_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Connection"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/connections/tags": {
            "get": {
                "tags": [
                    "Connection"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Connection_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/content": {
            "post": {
                "tags": [
                    "Content"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/IdResponse"
                        }
                    }
                },
                "operationId": "Content_Upload",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/content/{contentId}": {
            "get": {
                "tags": [
                    "Content"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "Content_Download",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "contentId"
                    }
                ]
            }
        },
        "/api/v2/content/public": {
            "get": {
                "tags": [
                    "Content"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "Content_DownloadPublicFile",
                "parameters": [
                    {
                        "x-nullable": true,
                        "in": "query",
                        "type": "string",
                        "name": "key"
                    },
                    {
                        "$ref": "#/parameters/platform"
                    },
                    {
                        "x-nullable": true,
                        "in": "query",
                        "type": "string",
                        "name": "id"
                    }
                ]
            }
        },
        "/api/v2/content/public/available": {
            "get": {
                "tags": [
                    "Content"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ContentView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Content_GetPublicDownloads",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/content/public/info": {
            "get": {
                "tags": [
                    "Content"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/ContentInfo"
                        }
                    }
                },
                "operationId": "Content_GetPublicFileInfo",
                "parameters": [
                    {
                        "x-nullable": true,
                        "in": "query",
                        "type": "string",
                        "name": "key"
                    },
                    {
                        "$ref": "#/parameters/platform"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/content/version": {
            "get": {
                "operationId": "Content_Version",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/VersionResponse"
                        }
                    }
                },
                "tags": [
                    "Content"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/platform"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/datastore/{indexName}": {
            "post": {
                "tags": [
                    "DataStore"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "DataStore_Insert",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "indexName"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/InsertRequestModel"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "requestModel"
                    }
                ]
            }
        },
        "/api/v2/datastore/{indexName}/{groupId}/fields": {
            "get": {
                "tags": [
                    "DataStore"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/DataStoreDocument"
                        }
                    }
                },
                "operationId": "DataStore_GetIndexFields",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "indexName"
                    },
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "groupId"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/datastore/{indexName}/bulk": {
            "post": {
                "tags": [
                    "DataStore"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "DataStore_BulkInsert",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "indexName"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/BulkInsertRequestModel"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "requestModel"
                    }
                ]
            }
        },
        "/api/v2/datastore/{indexName}/chart-data": {
            "post": {
                "tags": [
                    "DataStore"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "DataStore_PlotChartData",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "indexName"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/PlotChartDataRequestModel"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "requestModel"
                    }
                ]
            }
        },
        "/api/v2/datastore/{indexName}/delete": {
            "delete": {
                "operationId": "DataStore_Delete",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/DataStoreDocument"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "DataStore"
                ],
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "indexName"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/DeleteRequestModel"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "requestModel"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/datastore/{indexName}/query": {
            "post": {
                "tags": [
                    "DataStore"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "DataStore_Query",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "indexName"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/QueryRequestModel"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "requestModel"
                    }
                ]
            }
        },
        "/api/v2/datastore/{indexName}/query/eql": {
            "post": {
                "operationId": "DataStore_QueryEql",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/DataStoreDocument"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "DataStore"
                ],
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "indexName"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/QueryEqlRequestModel"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "requestModel"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/datastore/health": {
            "get": {
                "tags": [
                    "DataStore"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/DataStoreDocument"
                        }
                    }
                },
                "operationId": "DataStore_HealthCheck",
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/datastore/indexes/{groupId}": {
            "get": {
                "tags": [
                    "DataStore"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/DataStoreDocument"
                        }
                    }
                },
                "operationId": "DataStore_GetIndexes",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "groupId"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/endpoints": {
            "delete": {
                "tags": [
                    "EndpointAsset"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "EndpointAsset_DeleteBySet",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            },
            "get": {
                "tags": [
                    "EndpointAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIEndpointAssetQueryView"
                        }
                    }
                },
                "operationId": "EndpointAsset_List",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/endpoints/{endpointId}": {
            "delete": {
                "tags": [
                    "EndpointAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "EndpointAsset_DeleteById",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "endpointId"
                    }
                ]
            },
            "get": {
                "tags": [
                    "EndpointAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayEndpointAsset"
                        }
                    }
                },
                "operationId": "EndpointAsset_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "endpointId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/endpoints/count": {
            "get": {
                "tags": [
                    "EndpointAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "EndpointAsset_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/endpoints/count/query": {
            "post": {
                "operationId": "EndpointAsset_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "EndpointAsset"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/endpoints/dissolve": {
            "put": {
                "tags": [
                    "EndpointAsset"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "EndpointAsset_DissolveEndpoints",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/DissolveEndpointsRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/endpoints/query": {
            "post": {
                "operationId": "EndpointAsset_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIEndpointAssetQueryView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "EndpointAsset"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/endpoints/query/schema": {
            "get": {
                "tags": [
                    "EndpointAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "EndpointAsset_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/endpoints/query/set/{setId}": {
            "post": {
                "operationId": "EndpointAsset_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "EndpointAsset"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/endpoints/tags": {
            "get": {
                "tags": [
                    "EndpointAsset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "EndpointAsset_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/enrollment": {
            "post": {
                "operationId": "Enrollment_CreateEnrollmentSession",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/TokenResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Enrollment"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CreateEnrollmentSessionRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/groups": {
            "post": {
                "operationId": "Group_Create",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/IdResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CreateGroupRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIGroupQueryView"
                        }
                    }
                },
                "operationId": "Group_List",
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": [
                    "Group"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Group_DeleteBySet",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            }
        },
        "/api/v2/groups/{folderId}/remove": {
            "put": {
                "tags": [
                    "Group"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "Group_RemoveUsersFromGroup",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "folderId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            }
        },
        "/api/v2/groups/{groupId}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayGroup"
                        }
                    }
                },
                "operationId": "Group_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "groupId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Group_DeleteById",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "groupId"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Group"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Group_Update",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "groupId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateGroupRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/groups/count": {
            "get": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Group_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/groups/count/query": {
            "post": {
                "operationId": "Group_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/groups/ex/{groupId}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/GroupQueryViewEx"
                        }
                    }
                },
                "operationId": "Group_LoadEx",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "groupId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/groups/hierarchy": {
            "get": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RunwayGroup"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Group_GetHierarchy",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/groups/hierarchyex": {
            "get": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/GroupHierarchyViewEx"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Group_GetHierarchyEx",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/groups/query": {
            "post": {
                "operationId": "Group_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIGroupQueryView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/groups/query/ex": {
            "post": {
                "operationId": "Group_QueryEx",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfGroupQueryViewEx"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/groups/query/schema": {
            "get": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Group_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/groups/query/set/{setId}": {
            "post": {
                "operationId": "Group_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/groups/tags": {
            "get": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Group_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/invitations": {
            "post": {
                "tags": [
                    "Invitation"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Invitation_InviteUsers",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/GroupInvitationRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Invitation"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Invitation_DeleteBySet",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            },
            "get": {
                "tags": [
                    "Invitation"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIInvitationQueryView"
                        }
                    }
                },
                "operationId": "Invitation_List",
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "tags": [
                    "Invitation"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Invitation_AnswerInvitation",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/InvitationAnswerRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/invitations/{invitationId}": {
            "get": {
                "tags": [
                    "Invitation"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayInvitation"
                        }
                    }
                },
                "operationId": "Invitation_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "invitationId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/invitations/{targetSetId}/members": {
            "put": {
                "operationId": "Invitation_AddToSetByIds",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Invitation"
                ],
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "targetSetId"
                    },
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "objectIds"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/invitations/adduserstogroup": {
            "post": {
                "tags": [
                    "Invitation"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Invitation_AddUsersToGroup",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/GroupInvitationRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/invitations/availability/{email}": {
            "get": {
                "tags": [
                    "Invitation"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "operationId": "Invitation_HasInvitations",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "email"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/invitations/count": {
            "get": {
                "tags": [
                    "Invitation"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Invitation_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/invitations/count/query": {
            "post": {
                "operationId": "Invitation_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Invitation"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/invitations/current": {
            "get": {
                "tags": [
                    "Invitation"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IInvitationQueryView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Invitation_GetInvitations",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/invitations/query": {
            "post": {
                "operationId": "Invitation_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIInvitationQueryView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Invitation"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/invitations/query/schema": {
            "get": {
                "tags": [
                    "Invitation"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Invitation_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/invitations/query/set/{setId}": {
            "post": {
                "operationId": "Invitation_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Invitation"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/invitations/tags": {
            "get": {
                "tags": [
                    "Invitation"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Invitation_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/jobs": {
            "post": {
                "operationId": "Job_Create",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/CreateJobResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Job"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CreateJobRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIJobQueryView"
                        }
                    }
                },
                "operationId": "Job_List",
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": [
                    "Job"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Job_DeleteBySet",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            }
        },
        "/api/v2/jobs/{jobId}": {
            "delete": {
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Job_DeleteById",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "jobId"
                    }
                ]
            },
            "get": {
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayJob"
                        }
                    }
                },
                "operationId": "Job_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "jobId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/jobs/{jobId}/actions": {
            "put": {
                "tags": [
                    "Job"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Job_UpdateActions",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "jobId"
                    },
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ActionSettingRequest"
                            },
                            "type": "array"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/jobs/{jobId}/enable": {
            "put": {
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Job_EnableJob",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "jobId"
                    },
                    {
                        "x-nullable": false,
                        "in": "query",
                        "type": "boolean",
                        "name": "value"
                    }
                ]
            }
        },
        "/api/v2/jobs/{jobId}/schedule": {
            "put": {
                "tags": [
                    "Job"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Job_UpdateSchedule",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "jobId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/JobSchedule"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "schedule"
                    }
                ]
            }
        },
        "/api/v2/jobs/compile": {
            "post": {
                "operationId": "Job_Compile",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ActionConfiguration"
                            },
                            "type": "array"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Job"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CompileJobRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/jobs/count": {
            "get": {
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Job_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/jobs/count/query": {
            "post": {
                "operationId": "Job_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Job"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/jobs/name": {
            "get": {
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "operationId": "Job_GetRandomJobName"
            }
        },
        "/api/v2/jobs/parent-group/{jobId}": {
            "get": {
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "operationId": "Job_GetParentGroup",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "jobId"
                    }
                ],
                "produces": [
                    "text/plain"
                ]
            }
        },
        "/api/v2/jobs/query": {
            "post": {
                "operationId": "Job_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIJobQueryView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Job"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/jobs/query/schema": {
            "get": {
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Job_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/jobs/query/set/{setId}": {
            "post": {
                "operationId": "Job_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Job"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/jobs/tags": {
            "get": {
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Job_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/logs/{nodeId}": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "operationId": "Logs_RequestLogs",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "nodeId"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/repository": {
            "delete": {
                "tags": [
                    "Repository"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Repository_DeleteBySet",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            },
            "get": {
                "tags": [
                    "Repository"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIRepositoryItemQueryView"
                        }
                    }
                },
                "operationId": "Repository_List",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/repository/{repositoryId}": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayRepositoryItem"
                        }
                    }
                },
                "operationId": "Repository_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "repositoryId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/repository/action": {
            "post": {
                "tags": [
                    "Repository"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Repository_CreateAction",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CreateActionRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/repository/action/{actionId}/download": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "Repository_DownloadAction",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "actionId"
                    },
                    {
                        "$ref": "#/parameters/platform"
                    }
                ]
            }
        },
        "/api/v2/repository/action/{actionId}/info": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/ContentInfo"
                        }
                    }
                },
                "operationId": "Repository_GetActionContentInfo",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "actionId"
                    },
                    {
                        "$ref": "#/parameters/platform"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/repository/count": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Repository_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/repository/count/query": {
            "post": {
                "operationId": "Repository_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Repository"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/repository/name/{name}": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayRepositoryItem"
                        }
                    }
                },
                "operationId": "Repository_LoadByName",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "name"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/repository/query": {
            "post": {
                "operationId": "Repository_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIRepositoryItemQueryView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Repository"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/repository/query/schema": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Repository_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/repository/query/set/{setId}": {
            "post": {
                "operationId": "Repository_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Repository"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/repository/tags": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Repository_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/results": {
            "post": {
                "operationId": "Results_RequestActionResult",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "tags": [
                    "Results"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ActionResultRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/results/{notifyId}": {
            "put": {
                "tags": [
                    "Results"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Results_NotifyActionResultReady",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "notifyId"
                    },
                    {
                        "x-nullable": true,
                        "in": "query",
                        "type": "string",
                        "name": "contentId"
                    }
                ]
            },
            "get": {
                "tags": [
                    "Results"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/CheckResultResponse"
                        }
                    }
                },
                "operationId": "Results_CheckActionResult",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "notifyId"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/results/error/{notifyId}": {
            "put": {
                "tags": [
                    "Results"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Results_NotifyDownloadError",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "notifyId"
                    }
                ]
            }
        },
        "/api/v2/results/progress/{notifyId}": {
            "put": {
                "tags": [
                    "Results"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Results_NotifyDownloadInProgress",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "notifyId"
                    }
                ]
            }
        },
        "/api/v2/roles": {
            "post": {
                "operationId": "Role_Create",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/IdResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CreateRoleRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIRoleView"
                        }
                    }
                },
                "operationId": "Role_List",
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Role_DeleteBySet",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            }
        },
        "/api/v2/roles/{roleId}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayRole"
                        }
                    }
                },
                "operationId": "Role_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "roleId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Role_DeleteById",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "roleId"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Role"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Role_Update",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "roleId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateRoleRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/roles/count": {
            "get": {
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Role_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/roles/count/query": {
            "post": {
                "operationId": "Role_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/roles/query": {
            "post": {
                "operationId": "Role_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIRoleView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/roles/query/schema": {
            "get": {
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Role_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/roles/query/set/{setId}": {
            "post": {
                "operationId": "Role_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/roles/tags": {
            "get": {
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Role_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/runners": {
            "delete": {
                "tags": [
                    "Runner"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Runner_DeleteBySet",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            },
            "get": {
                "tags": [
                    "Runner"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIRunnerQueryView"
                        }
                    }
                },
                "operationId": "Runner_List",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/runners/{runnerId}": {
            "delete": {
                "tags": [
                    "Runner"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Runner_DeleteById",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "runnerId"
                    }
                ]
            },
            "get": {
                "tags": [
                    "Runner"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayRunner"
                        }
                    }
                },
                "operationId": "Runner_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "runnerId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/runners/count": {
            "get": {
                "tags": [
                    "Runner"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Runner_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/runners/count/query": {
            "post": {
                "operationId": "Runner_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Runner"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/runners/dissolve": {
            "put": {
                "tags": [
                    "Runner"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Runner_BeginDissolveRunners",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/DissolveRunnersRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/runners/dissolved": {
            "delete": {
                "tags": [
                    "Runner"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Runner_CompleteDissolveRunner"
            }
        },
        "/api/v2/runners/group/{groupId}": {
            "get": {
                "tags": [
                    "Runner"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryRunnersResponse"
                        }
                    }
                },
                "operationId": "Runner_QueryByGroupId",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "groupId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/runners/ip/{ipAddress}": {
            "get": {
                "tags": [
                    "Runner"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryRunnersResponse"
                        }
                    }
                },
                "operationId": "Runner_QueryByIP",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "ipAddress"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/runners/query": {
            "post": {
                "operationId": "Runner_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIRunnerQueryView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Runner"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/runners/query/schema": {
            "get": {
                "tags": [
                    "Runner"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Runner_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/runners/query/set/{setId}": {
            "post": {
                "operationId": "Runner_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Runner"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/runners/tags": {
            "get": {
                "tags": [
                    "Runner"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Runner_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/sets": {
            "post": {
                "tags": [
                    "Set"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/IdResponse"
                        }
                    }
                },
                "operationId": "Set_CreateSet",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/sets/{setId}": {
            "delete": {
                "tags": [
                    "Set"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Set_DeleteSet",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "setId"
                    }
                ]
            }
        },
        "/api/v2/sets/{setId}/count": {
            "get": {
                "tags": [
                    "Set"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Set_GetMemberCount",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "setId"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json"
                ]
            }
        },
        "/api/v2/sets/{targetSetId}/members": {
            "delete": {
                "operationId": "Set_RemoveFromSetByIds",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Set"
                ],
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "targetSetId"
                    },
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "objectIds"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "operationId": "Set_AddToSetByIds",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "Set"
                ],
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "targetSetId"
                    },
                    {
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "objectIds"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/sets/{targetSetId}/members/set/{sourceSetId}": {
            "delete": {
                "tags": [
                    "Set"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Set_RemoveFromSetBySet",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "targetSetId"
                    },
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "sourceSetId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "tags": [
                    "Set"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "Set_AddToSetBySet",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "targetSetId"
                    },
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "sourceSetId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/shell": {
            "post": {
                "operationId": "RemoteShell_ShellWrite",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "RemoteShell"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/RemoteShellRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": [
                    "RemoteShell"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "RemoteShell_ShellCancel",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/RemoteShellDeleteRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/shell/ping": {
            "post": {
                "tags": [
                    "RemoteShell"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "RemoteShell_ShellPing",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/RemoteShellPingRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/shell/session": {
            "post": {
                "tags": [
                    "RemoteShell"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "RemoteShell_ShellSession",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StartShellSessionRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/tags": {
            "delete": {
                "tags": [
                    "Tag"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Tag_DeleteTags",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/TagRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            },
            "get": {
                "tags": [
                    "Tag"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "Tag_GetTags",
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "tags": [
                    "Tag"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "Tag_AddTags",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/TagRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/threads": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIJobThreadQueryView"
                        }
                    }
                },
                "operationId": "JobThread_List",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/{threadId}": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayJobThread"
                        }
                    }
                },
                "operationId": "JobThread_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "threadId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/{threadId}/exists": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "operationId": "JobThread_GetExistStatusForThread",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "threadId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/{threadId}/lastlog": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "JobThread_GetLastLogForThread",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "threadId"
                    }
                ]
            }
        },
        "/api/v2/threads/{threadId}/lastresult": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "operationId": "JobThread_DownloadResultForThread",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "threadId"
                    }
                ]
            }
        },
        "/api/v2/threads/{threadId}/nodename": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "operationId": "JobThread_GetNodeNameForThread",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "threadId"
                    }
                ],
                "produces": [
                    "text/plain"
                ]
            }
        },
        "/api/v2/threads/auto": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ThreadView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "JobThread_GetAutoSpawnThreads",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/count": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "JobThread_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/count/query": {
            "post": {
                "operationId": "JobThread_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "JobThread"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/enabled/{threadId}": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "operationId": "JobThread_GetEnabledStatusForThread",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "threadId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/job/{jobId}": {
            "delete": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "JobThread_DeleteByJob",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "jobId"
                    }
                ]
            },
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RunwayJobThread"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "JobThread_GetThreadsForJob",
                "parameters": [
                    {
                        "x-nullable": true,
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "name": "jobId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/query": {
            "post": {
                "operationId": "JobThread_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIJobThreadQueryView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "JobThread"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/query/schema": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "JobThread_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/query/set/{setId}": {
            "post": {
                "operationId": "JobThread_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "JobThread"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/step": {
            "put": {
                "tags": [
                    "JobThread"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "JobThread_StepJobThread",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StepThreadRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/threads/tags": {
            "get": {
                "tags": [
                    "JobThread"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "JobThread_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/threads/trigger": {
            "post": {
                "operationId": "JobThread_TriggerJobThread",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/TriggerJobThreadResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "JobThread"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/TriggerJobThreadRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/users": {
            "post": {
                "operationId": "User_Create",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/IdResponse"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CreateUserRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIUserQueryView"
                        }
                    }
                },
                "operationId": "User_List",
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "User_DeleteBySet",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IdRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "setRequest"
                    }
                ]
            }
        },
        "/api/v2/users/{userId}": {
            "get": {
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/RunwayUser"
                        }
                    }
                },
                "operationId": "User_Load",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "userId"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "User_DeleteById",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "userId"
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": true
                    }
                },
                "operationId": "User_Update",
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "userId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateUserRequest"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "request"
                    }
                ]
            }
        },
        "/api/v2/users/count": {
            "get": {
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "operationId": "User_Count",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/users/count/query": {
            "post": {
                "operationId": "User_CountQuery",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/users/query": {
            "post": {
                "operationId": "User_Query",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "$ref": "#/definitions/QueryResponseOfIUserQueryView"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/users/query/schema": {
            "get": {
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IFilterProperty"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "User_GetQuerySchema",
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/users/query/set/{setId}": {
            "post": {
                "operationId": "User_SaveQueryToSet",
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "consumes": [
                    "application/json",
                    "application/*+json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "x-nullable": true,
                        "type": "string",
                        "required": true,
                        "name": "setId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Query"
                        },
                        "x-nullable": false,
                        "required": true,
                        "in": "body",
                        "name": "query"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/v2/users/tags": {
            "get": {
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "x-nullable": false,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TagView"
                            },
                            "type": "array"
                        }
                    }
                },
                "operationId": "User_GetTags",
                "produces": [
                    "application/json"
                ]
            }
        }
    },
    "definitions": {
        "AccessFlags": {
            "enum": [
                "Read",
                "Create",
                "Update",
                "Delete",
                "Remote",
                "Execute",
                "Admin",
                "SuperAdmin",
                "Stream"
            ],
            "x-enumNames": [
                "Read",
                "Create",
                "Update",
                "Delete",
                "Remote",
                "Execute",
                "Admin",
                "SuperAdmin",
                "Stream"
            ],
            "description": "",
            "type": "string",
            "x-enumFlags": true
        },
        "ActionChainSettingsRequest": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "actions": {
                    "items": {
                        "$ref": "#/definitions/ActionSettingRequest"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ActionConfiguration": {
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "settings": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "folder": {
                    "type": "string"
                },
                "connectionId": {
                    "type": "string"
                },
                "specificPlacementId": {
                    "type": "string"
                },
                "stepBehavior": {
                    "type": "string"
                },
                "repositoryActionId": {
                    "type": "string"
                },
                "runOn": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ActionInstance": {
            "properties": {
                "containerImageName": {
                    "type": "string"
                },
                "connectionName": {
                    "type": "string"
                },
                "capabilities": {
                    "type": "string"
                },
                "specificPlacementId": {
                    "type": "string"
                },
                "nextActionId": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/ActionState"
                },
                "responsibleRunnerId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "settings": {
                    "items": {
                        "$ref": "#/definitions/ActionSetting"
                    },
                    "type": "array"
                },
                "result": {
                    "$ref": "#/definitions/StepResult"
                },
                "resultFilename": {
                    "type": "string"
                },
                "connectionId": {
                    "type": "string"
                },
                "repositoryActionId": {
                    "type": "string"
                },
                "class": {
                    "$ref": "#/definitions/RunClass"
                },
                "stdoutContentPath": {
                    "type": "string"
                },
                "actionName": {
                    "type": "string"
                },
                "prevActionId": {
                    "type": "string"
                },
                "runOn": {
                    "$ref": "#/definitions/RunLocation"
                }
            },
            "required": [
                "state",
                "result",
                "class",
                "runOn"
            ],
            "type": "object"
        },
        "ActionResultRequest": {
            "properties": {
                "threadId": {
                    "type": "string"
                },
                "actionId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ActionSetting": {
            "properties": {
                "value": {
                    "type": "string"
                },
                "isReadOnly": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "defaultValue": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/ActionSettingType"
                },
                "isOptional": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "type",
                "isOptional",
                "isReadOnly"
            ],
            "type": "object"
        },
        "ActionSettingRequest": {
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "settings": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "folder": {
                    "type": "string"
                },
                "connectionId": {
                    "type": "string"
                },
                "specificPlacementId": {
                    "type": "string"
                },
                "stepBehavior": {
                    "type": "string"
                },
                "repositoryActionId": {
                    "type": "string"
                },
                "runOn": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ActionSettingType": {
            "enum": [
                "String",
                "Number",
                "Boolean",
                "Password",
                "DateTime"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "String",
                "Number",
                "Boolean",
                "Password",
                "DateTime"
            ]
        },
        "ActionState": {
            "enum": [
                "Uninitialized",
                "Ready",
                "Running",
                "Waiting",
                "Finished"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Uninitialized",
                "Ready",
                "Running",
                "Waiting",
                "Finished"
            ]
        },
        "ActivateUserRequest": {
            "properties": {
                "captcha": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdapterInformation": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "lastIpAddress": {
                    "type": "string"
                },
                "iPv6Address": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "netBIOSoverTcpip": {
                    "type": "boolean"
                },
                "gatewayAddress": {
                    "type": "string"
                },
                "dhcPv6IAID": {
                    "type": "string"
                },
                "dhcpServer": {
                    "type": "string"
                },
                "dhcpEnabled": {
                    "type": "boolean"
                },
                "leaseObtained": {
                    "type": "string"
                },
                "leaseExpires": {
                    "type": "string"
                },
                "dhcPv6ClientDUID": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "mediaState": {
                    "type": "string"
                },
                "primaryWINSServer": {
                    "type": "string"
                },
                "temporaryIPv6Address": {
                    "type": "string"
                },
                "configuration": {
                    "type": "string"
                },
                "dnsName": {
                    "type": "string"
                },
                "linklocalIPv6Address": {
                    "type": "string"
                },
                "iPv4Address": {
                    "type": "string"
                },
                "subnetMask": {
                    "type": "string"
                },
                "dnsServers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "secondaryWINSServer": {
                    "type": "string"
                }
            },
            "required": [
                "dhcpEnabled",
                "netBIOSoverTcpip"
            ],
            "type": "object"
        },
        "AssetMap": {
            "properties": {
                "tags": {
                    "type": "string"
                },
                "kubernetesData": {
                    "items": {
                        "$ref": "#/definitions/KubernetesEndpoint"
                    },
                    "type": "array"
                },
                "groupID": {
                    "type": "string"
                },
                "endpointData": {
                    "items": {
                        "$ref": "#/definitions/AssetMapEndpoint"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AssetMapAccountView": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayAccountAsset"
                },
                {
                    "properties": {
                        "endpointCount": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "endpointCount"
                    ],
                    "type": "object"
                }
            ]
        },
        "AssetMapArpCache": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AssetMapDataPair": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AssetMapEndpoint": {
            "properties": {
                "userAccounts": {
                    "items": {
                        "$ref": "#/definitions/AssetMapUserAccount"
                    },
                    "type": "array"
                },
                "deviceType": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "uniqueFingerprint": {
                    "type": "string"
                },
                "knownMAC": {
                    "type": "string"
                },
                "props": {
                    "items": {
                        "$ref": "#/definitions/AssetMapDataPair"
                    },
                    "type": "array"
                },
                "typeHint": {
                    "format": "int32",
                    "type": "integer"
                },
                "dnsName": {
                    "type": "string"
                },
                "gatewayAddress": {
                    "type": "string"
                },
                "interfaces": {
                    "items": {
                        "$ref": "#/definitions/AssetMapNetworkInterface"
                    },
                    "type": "array"
                },
                "endpointType": {
                    "type": "string"
                },
                "localName": {
                    "type": "string"
                },
                "hardwareProduct": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "systemInfo": {
                    "items": {
                        "$ref": "#/definitions/AssetMapDataPair"
                    },
                    "type": "array"
                }
            },
            "required": [
                "typeHint"
            ],
            "type": "object"
        },
        "AssetMapEndpointView": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayEndpointAsset"
                },
                {
                    "properties": {
                        "users": {
                            "items": {
                                "$ref": "#/definitions/AssetMapAccountView"
                            },
                            "type": "array"
                        },
                        "userCount": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "userCount"
                    ],
                    "type": "object"
                }
            ]
        },
        "AssetMapNetworkInterface": {
            "properties": {
                "gatewayAddress": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "arpCache": {
                    "items": {
                        "$ref": "#/definitions/AssetMapArpCache"
                    },
                    "type": "array"
                },
                "index": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "dnsName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AssetMapUserAccount": {
            "properties": {
                "accountData": {
                    "items": {
                        "$ref": "#/definitions/AssetMapDataPair"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BulkInsertRequestModel": {
            "properties": {
                "data": {
                    "items": {},
                    "type": "array"
                },
                "groupId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChartType": {
            "enum": [
                "Line",
                "Pie",
                "Bar"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Line",
                "Pie",
                "Bar"
            ]
        },
        "CheckResultResponse": {
            "properties": {
                "inProgressUpdateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "notifyId": {
                    "type": "string"
                },
                "contentId": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloseStreamRequest": {
            "properties": {
                "streamId": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompileJobRequest": {
            "properties": {
                "actionChainCommand": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Content": {
            "properties": {
                "contentType": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-abstract": true
        },
        "ContentInfo": {
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "mD5": {
                    "type": "string"
                },
                "length": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "length"
            ],
            "type": "object"
        },
        "ContentView": {
            "allOf": [
                {
                    "$ref": "#/definitions/Content"
                },
                {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "md5": {
                            "type": "string"
                        },
                        "length": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "title": {
                            "type": "string"
                        },
                        "version": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "path": {
                            "type": "string"
                        },
                        "platform": {
                            "$ref": "#/definitions/Platform"
                        }
                    },
                    "required": [
                        "platform",
                        "length"
                    ],
                    "type": "object"
                }
            ]
        },
        "CreateActionRequest": {
            "properties": {
                "contentId": {
                    "type": "string"
                },
                "parentFolderId": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "isPublic"
            ],
            "type": "object"
        },
        "CreateConnectionRequest": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "actionId": {
                    "type": "string"
                },
                "settings": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "assignedEndpointId": {
                    "type": "string"
                },
                "runnerId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "isHidden"
            ],
            "type": "object"
        },
        "CreateEnrollmentSessionRequest": {
            "properties": {
                "jobIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "groupId": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/EnrollmentType"
                },
                "expiration": {
                    "format": "date-time",
                    "type": "string"
                },
                "isOneTime": {
                    "type": "boolean"
                }
            },
            "required": [
                "type",
                "expiration",
                "isOneTime"
            ],
            "type": "object"
        },
        "CreateGroupRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/UpdateGroupRequest"
                },
                {
                    "properties": {
                        "parentGroupId": {
                            "type": "string"
                        },
                        "tenantRootUser": {
                            "type": "string"
                        },
                        "tenantPassword": {
                            "type": "string"
                        },
                        "invitations": {
                            "items": {
                                "$ref": "#/definitions/EmailInvitation"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CreateJobRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/ActionChainSettingsRequest"
                },
                {
                    "properties": {
                        "endpointSetId": {
                            "type": "string"
                        },
                        "schedule": {
                            "$ref": "#/definitions/JobSchedule"
                        },
                        "groupId": {
                            "type": "string"
                        },
                        "isHidden": {
                            "type": "boolean"
                        },
                        "isEnabled": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "isEnabled",
                        "isHidden"
                    ],
                    "type": "object"
                }
            ]
        },
        "CreateJobResponse": {
            "properties": {
                "endpointSetId": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                },
                "jobName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateRoleRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/UpdateRoleRequest"
                },
                {
                    "properties": {
                        "groupId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CreateUserRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/UpdateUserRequest"
                },
                {
                    "properties": {
                        "password": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "optionalGroupId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "DatahubStatusRequest": {
            "properties": {
                "streamId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DatahubStatusResponse": {
            "properties": {
                "clientsCount": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "clientsCount"
            ],
            "type": "object"
        },
        "DataStoreDocument": {
            "properties": {
                "took": {
                    "format": "int32",
                    "type": "integer"
                },
                "_shards": {
                    "$ref": "#/definitions/Shards"
                },
                "timed_out": {
                    "type": "boolean"
                },
                "hits": {
                    "$ref": "#/definitions/Hits"
                }
            },
            "required": [
                "took",
                "timed_out"
            ],
            "type": "object"
        },
        "DeleteRequestModel": {
            "properties": {
                "deleteQuery": {},
                "groupId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DissolveEndpointsRequest": {
            "properties": {
                "skipDissolve": {
                    "type": "boolean"
                },
                "setId": {
                    "type": "string"
                }
            },
            "required": [
                "skipDissolve"
            ],
            "type": "object"
        },
        "DissolveRunnersRequest": {
            "properties": {
                "setId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EmailInvitation": {
            "properties": {
                "roleId": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EnrollmentType": {
            "enum": [
                "Uninitialized",
                "AddMembership",
                "ActivateUserCredential",
                "EnrollEphemeralContainer",
                "EnrollPersistentRunner",
                "EnrollCloudWorker",
                "EnrollPersistentCloud"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Uninitialized",
                "AddMembership",
                "ActivateUserCredential",
                "EnrollEphemeralContainer",
                "EnrollPersistentRunner",
                "EnrollCloudWorker",
                "EnrollPersistentCloud"
            ]
        },
        "EnrollRequest": {
            "properties": {
                "parameters": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "enrollmentToken": {
                    "type": "string"
                },
                "interfaces": {
                    "items": {
                        "$ref": "#/definitions/AssetMapNetworkInterface"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EnrollResponse": {
            "properties": {
                "parameters": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "nodeSecretKey": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FilterComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "children": {
                    "items": {
                        "$ref": "#/definitions/FilterComparison"
                    },
                    "type": "array"
                },
                "right": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "left": {
                    "type": "string"
                }
            },
            "required": [
                "caseSensitive"
            ],
            "type": "object"
        },
        "FilterDataType": {
            "enum": [
                "String",
                "Integer",
                "Boolean",
                "Timestamp"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "String",
                "Integer",
                "Boolean",
                "Timestamp"
            ]
        },
        "GroupHierarchyViewEx": {
            "properties": {
                "portraitUrl": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "parentIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "homeForUserId": {
                    "type": "string"
                },
                "canCreateTenants": {
                    "type": "boolean"
                },
                "licensesInUse": {
                    "format": "int32",
                    "type": "integer"
                },
                "licensesAllocated": {
                    "format": "int32",
                    "type": "integer"
                },
                "parentLicenseContainerId": {
                    "type": "string"
                },
                "homeForUserName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "licenseExpiration": {
                    "format": "date-time",
                    "type": "string"
                },
                "homeForUserEmail": {
                    "type": "string"
                }
            },
            "required": [
                "isSelected",
                "licensesAllocated",
                "licensesInUse",
                "licenseExpiration",
                "canCreateTenants"
            ],
            "type": "object"
        },
        "GroupInvitationRequest": {
            "properties": {
                "groupId": {
                    "type": "string"
                },
                "invitations": {
                    "items": {
                        "$ref": "#/definitions/EmailInvitation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GroupQueryViewEx": {
            "properties": {
                "tenantCompanyName": {
                    "type": "string"
                },
                "licensesInUse": {
                    "format": "int32",
                    "type": "integer"
                },
                "tenantEmail": {
                    "type": "string"
                },
                "tenantPhoneNumber": {
                    "type": "string"
                },
                "tenantOtherDetails": {
                    "type": "string"
                },
                "tenantName": {
                    "type": "string"
                },
                "canCreateTenants": {
                    "type": "boolean"
                },
                "ownerEmail": {
                    "type": "string"
                },
                "licenseExpiration": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ownerName": {
                    "type": "string"
                },
                "parentLicenseContainerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tenantExpiration": {
                    "type": "string"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "homeForUserId": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "licensesAllocated": {
                    "format": "int32",
                    "type": "integer"
                },
                "portraitUrl": {
                    "type": "string"
                }
            },
            "required": [
                "isSelected",
                "licensesAllocated",
                "licensesInUse",
                "licenseExpiration",
                "canCreateTenants"
            ],
            "type": "object"
        },
        "Hit": {
            "properties": {
                "_index": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_source": {
                    "additionalProperties": {}
                },
                "_type": {
                    "type": "string"
                },
                "_score": {
                    "format": "double",
                    "type": "number"
                }
            },
            "required": [
                "_score",
                "_source"
            ],
            "type": "object"
        },
        "Hits": {
            "properties": {
                "total": {
                    "$ref": "#/definitions/Total"
                },
                "hits": {
                    "items": {
                        "$ref": "#/definitions/Hit"
                    },
                    "type": "array"
                },
                "max_score": {
                    "format": "double",
                    "type": "number"
                }
            },
            "required": [
                "max_score"
            ],
            "type": "object"
        },
        "IAccountAssetQueryView": {
            "properties": {
                "endpointHostname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "endpointId": {
                    "type": "string"
                },
                "sid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "securityGroups": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "domain": {
                    "type": "string"
                }
            },
            "required": [
                "isSelected"
            ],
            "type": "object",
            "x-abstract": true
        },
        "IConnectionQueryView": {
            "properties": {
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "actionId": {
                    "type": "string"
                },
                "settings": {
                    "items": {
                        "$ref": "#/definitions/ActionSetting"
                    },
                    "type": "array"
                },
                "assignedEndpointId": {
                    "type": "string"
                },
                "runnerId": {
                    "type": "string"
                },
                "assignedEndpointName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "actionName": {
                    "type": "string"
                },
                "connectionMetrics": {
                    "items": {
                        "$ref": "#/definitions/RunwayConnectionStatistic"
                    },
                    "type": "array"
                }
            },
            "required": [
                "isHidden",
                "isSelected"
            ],
            "type": "object",
            "x-abstract": true
        },
        "IdRequest": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IdResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/IdRequest"
                },
                {
                    "type": "object"
                }
            ]
        },
        "IEndpointAssetQueryView": {
            "properties": {
                "lastThreadId": {
                    "type": "string"
                },
                "runnerCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "preferredMacAddress": {
                    "type": "string"
                },
                "runnerAffinity": {
                    "$ref": "#/definitions/NodeAffinity"
                },
                "metaData": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "lastGatewayAddress": {
                    "type": "string"
                },
                "isPendingDelete": {
                    "type": "boolean"
                },
                "buildInformation": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "lastThreadState": {
                    "$ref": "#/definitions/JobThreadState"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "endpointType": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "membershipFlag": {
                    "type": "boolean"
                },
                "organizationalUnit": {
                    "type": "string"
                },
                "hasRunner": {
                    "type": "boolean"
                },
                "hardwareProduct": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "lastIpAddress": {
                    "type": "string"
                },
                "hasActiveRunner": {
                    "type": "boolean"
                },
                "adapters": {
                    "items": {
                        "$ref": "#/definitions/AdapterInformation"
                    },
                    "type": "array"
                }
            },
            "required": [
                "isPendingDelete",
                "membershipFlag",
                "hasActiveRunner",
                "hasRunner",
                "runnerCount",
                "runnerAffinity",
                "lastThreadState",
                "isSelected"
            ],
            "type": "object",
            "x-abstract": true
        },
        "IFilterProperty": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/FilterDataType"
                }
            },
            "required": [
                "type"
            ],
            "type": "object",
            "x-abstract": true
        },
        "IGroupQueryView": {
            "properties": {
                "licensesAllocated": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "parentLicenseContainerId": {
                    "type": "string"
                },
                "canCreateTenants": {
                    "type": "boolean"
                },
                "portraitUrl": {
                    "type": "string"
                },
                "licensesInUse": {
                    "format": "int32",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "homeForUserId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "licenseExpiration": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "required": [
                "isSelected",
                "licensesAllocated",
                "licensesInUse",
                "licenseExpiration",
                "canCreateTenants"
            ],
            "type": "object",
            "x-abstract": true
        },
        "IInvitationQueryView": {
            "properties": {
                "isSelected": {
                    "type": "boolean"
                },
                "userName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "roleId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "roleName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "actorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "isSelected"
            ],
            "type": "object",
            "x-abstract": true
        },
        "IJobQueryView": {
            "properties": {
                "actions": {
                    "items": {
                        "$ref": "#/definitions/ActionInstance"
                    },
                    "type": "array"
                },
                "totalEndpointsFinishedErrors": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "schedule": {
                    "$ref": "#/definitions/JobSchedule"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "totalEndpointsFinished": {
                    "format": "int32",
                    "type": "integer"
                },
                "jobMetrics": {
                    "items": {
                        "$ref": "#/definitions/RunwayJobStatistic"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "totalEndpointsRunning": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalEndpointsAssigned": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "isEnabled",
                "isHidden",
                "totalEndpointsFinished",
                "totalEndpointsFinishedErrors",
                "totalEndpointsRunning",
                "totalEndpointsAssigned",
                "isSelected"
            ],
            "type": "object",
            "x-abstract": true
        },
        "IJobThreadQueryView": {
            "properties": {
                "lastStepResult": {
                    "$ref": "#/definitions/StepResult"
                },
                "id": {
                    "type": "string"
                },
                "threadState": {
                    "$ref": "#/definitions/JobThreadState"
                },
                "prodigalObjectId": {
                    "type": "string"
                }
            },
            "required": [
                "threadState",
                "lastStepResult"
            ],
            "type": "object",
            "x-abstract": true
        },
        "InsertRequestModel": {
            "properties": {
                "json": {},
                "id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InvitationAnswerRequest": {
            "properties": {
                "invitationId": {
                    "type": "string"
                },
                "accept": {
                    "type": "boolean"
                }
            },
            "required": [
                "accept"
            ],
            "type": "object"
        },
        "IRepositoryItemQueryView": {
            "properties": {
                "output": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "revision": {
                    "format": "int32",
                    "type": "integer"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "input": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "glyph": {
                    "type": "string"
                },
                "isConnectionRequired": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "license": {
                    "$ref": "#/definitions/RepositoryLicense"
                },
                "scope": {
                    "$ref": "#/definitions/RepositoryScope"
                },
                "description": {
                    "type": "string"
                },
                "desiredSettings": {
                    "items": {
                        "$ref": "#/definitions/ActionSetting"
                    },
                    "type": "array"
                }
            },
            "required": [
                "isConnectionRequired",
                "license",
                "scope",
                "revision",
                "isSelected"
            ],
            "type": "object",
            "x-abstract": true
        },
        "IRoleView": {
            "properties": {
                "permissions": {
                    "items": {
                        "$ref": "#/definitions/RunwayRoleAccess"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "isSelected"
            ],
            "type": "object",
            "x-abstract": true
        },
        "IRunnerQueryView": {
            "properties": {
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "assetId": {
                    "type": "string"
                },
                "assetName": {
                    "type": "string"
                },
                "affinity": {
                    "$ref": "#/definitions/NodeAffinity"
                },
                "id": {
                    "type": "string"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "isActive": {
                    "type": "boolean"
                }
            },
            "required": [
                "isActive",
                "isSelected",
                "affinity"
            ],
            "type": "object",
            "x-abstract": true
        },
        "IUserQueryView": {
            "properties": {
                "homeContainerId": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "emailAddress": {
                    "type": "string"
                },
                "portraitUrl": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            },
            "required": [
                "isSelected"
            ],
            "type": "object",
            "x-abstract": true
        },
        "JobSchedule": {
            "properties": {
                "schedule": {
                    "type": "string"
                },
                "repeatMinutes": {
                    "format": "int32",
                    "type": "integer"
                },
                "weekdays": {
                    "type": "string"
                },
                "scheduleType": {
                    "$ref": "#/definitions/JobScheduleType"
                }
            },
            "required": [
                "scheduleType",
                "repeatMinutes"
            ],
            "type": "object"
        },
        "JobScheduleType": {
            "enum": [
                "RunNow",
                "RunOnce",
                "RunEvery"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "RunNow",
                "RunOnce",
                "RunEvery"
            ]
        },
        "JobThreadState": {
            "enum": [
                "Uninitialized",
                "NotStarted",
                "Running",
                "Waiting",
                "Finished"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Uninitialized",
                "NotStarted",
                "Running",
                "Waiting",
                "Finished"
            ]
        },
        "KubernetesEndpoint": {
            "properties": {
                "hostIP": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "nodeName": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoginRequest": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "remember": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "required": [
                "remember"
            ],
            "type": "object"
        },
        "LoginResponse": {
            "properties": {
                "ttl": {
                    "type": "string"
                },
                "session": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodeAffinity": {
            "enum": [
                "EphemeralContainer",
                "PersistentRunner",
                "CloudWorker",
                "PersistentCloud",
                "Utility",
                "KubeMasterAgentless"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "EphemeralContainer",
                "PersistentRunner",
                "CloudWorker",
                "PersistentCloud",
                "Utility",
                "KubeMasterAgentless"
            ]
        },
        "NodeState": {
            "enum": [
                "NotEnrolled",
                "Enrolled"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "NotEnrolled",
                "Enrolled"
            ]
        },
        "Platform": {
            "enum": [
                "Agnostic",
                "Cloud",
                "Windows64",
                "Windows32",
                "Linux64",
                "Linux32",
                "MacOS",
                "Android",
                "iOS",
                "Debian64",
                "Debian32",
                "Centos64",
                "FreeBSD64"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Agnostic",
                "Cloud",
                "Windows64",
                "Windows32",
                "Linux64",
                "Linux32",
                "MacOS",
                "Android",
                "iOS",
                "Debian64",
                "Debian32",
                "Centos64",
                "FreeBSD64"
            ]
        },
        "PlotChartDataRequestModel": {
            "properties": {
                "from": {
                    "format": "int32",
                    "type": "integer"
                },
                "xFieldAutoIncrement": {
                    "type": "boolean"
                },
                "groupId": {
                    "type": "string"
                },
                "yField": {
                    "type": "string"
                },
                "xField": {
                    "type": "string"
                },
                "chartTitle": {
                    "type": "string"
                },
                "searchQuery": {},
                "chartType": {
                    "$ref": "#/definitions/ChartType"
                },
                "take": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "chartType",
                "xFieldAutoIncrement"
            ],
            "type": "object"
        },
        "Query": {
            "properties": {
                "filter": {
                    "$ref": "#/definitions/FilterComparison"
                },
                "membershipCheckId": {
                    "type": "string"
                },
                "sortField": {
                    "type": "string"
                },
                "selectionCheckId": {
                    "type": "string"
                },
                "includeSubgroups": {
                    "type": "boolean"
                },
                "sortDirection": {
                    "$ref": "#/definitions/SortDirection"
                },
                "rootContainerId": {
                    "type": "string"
                },
                "skip": {
                    "format": "int32",
                    "type": "integer"
                },
                "take": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "skip",
                "take",
                "includeSubgroups",
                "sortDirection"
            ],
            "type": "object"
        },
        "QueryEqlRequestModel": {
            "properties": {
                "searchQuery": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QueryRequestModel": {
            "properties": {
                "take": {
                    "format": "int32",
                    "type": "integer"
                },
                "from": {
                    "format": "int32",
                    "type": "integer"
                },
                "groupId": {
                    "type": "string"
                },
                "searchQuery": {}
            },
            "type": "object"
        },
        "QueryResponseOfAssetMapEndpointView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/AssetMapEndpointView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfGroupQueryViewEx": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/GroupQueryViewEx"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIAccountAssetQueryView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IAccountAssetQueryView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIConnectionQueryView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IConnectionQueryView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIEndpointAssetQueryView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IEndpointAssetQueryView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIGroupQueryView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IGroupQueryView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIInvitationQueryView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IInvitationQueryView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIJobQueryView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IJobQueryView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIJobThreadQueryView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IJobThreadQueryView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIRepositoryItemQueryView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IRepositoryItemQueryView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIRoleView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IRoleView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIRunnerQueryView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IRunnerQueryView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfIUserQueryView": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/IUserQueryView"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryResponseOfRunwayEndpointAsset": {
            "properties": {
                "totalCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/RunwayEndpointAsset"
                    },
                    "type": "array"
                },
                "filteredCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "selectedCount": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "filteredCount",
                "totalCount",
                "selectedCount"
            ],
            "type": "object"
        },
        "QueryRunnersResponse": {
            "properties": {
                "runners": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RemoteShellDeleteRequest": {
            "properties": {
                "runnerId": {
                    "type": "string"
                },
                "downloadId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RemoteShellPingRequest": {
            "properties": {
                "runnerId": {
                    "type": "string"
                },
                "downloadId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RemoteShellRequest": {
            "properties": {
                "runnerId": {
                    "type": "string"
                },
                "executeCmd": {
                    "type": "string"
                },
                "internalCommand": {
                    "type": "boolean"
                }
            },
            "required": [
                "internalCommand"
            ],
            "type": "object"
        },
        "RepositoryLicense": {
            "enum": [
                "Free",
                "Paid"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Free",
                "Paid"
            ]
        },
        "RepositoryScope": {
            "enum": [
                "Private",
                "Public"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Private",
                "Public"
            ]
        },
        "ResetPasswordRequest": {
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunClass": {
            "enum": [
                "Uninitialized",
                "RunSequence",
                "RunTrigger",
                "RunResident"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Uninitialized",
                "RunSequence",
                "RunTrigger",
                "RunResident"
            ]
        },
        "RunLocation": {
            "enum": [
                "Uninitialized",
                "RunOnProdigalObject",
                "RunOnGenericPool",
                "RunOnSpecificObject",
                "RunOnDedicatedService",
                "RunOnConnection"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Uninitialized",
                "RunOnProdigalObject",
                "RunOnGenericPool",
                "RunOnSpecificObject",
                "RunOnDedicatedService",
                "RunOnConnection"
            ]
        },
        "RunwayAccountAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayAsset"
                },
                {
                    "properties": {
                        "endpointHostname": {
                            "type": "string"
                        },
                        "domain": {
                            "type": "string"
                        },
                        "securityGroups": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "instanceTimestamp": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "instanceType": {
                            "type": "string"
                        },
                        "endpointId": {
                            "type": "string"
                        },
                        "sid": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "instanceTimestamp"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwayActor": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "homeContainerId": {
                            "type": "string"
                        },
                        "sessions": {
                            "items": {
                                "$ref": "#/definitions/RunwaySession"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "RunwayAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "type": "object"
                }
            ]
        },
        "RunwayConnection": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "actionId": {
                            "type": "string"
                        },
                        "settings": {
                            "items": {
                                "$ref": "#/definitions/ActionSetting"
                            },
                            "type": "array"
                        },
                        "assignedEndpointId": {
                            "type": "string"
                        },
                        "runnerId": {
                            "type": "string"
                        },
                        "assignedEndpointName": {
                            "type": "string"
                        },
                        "isHidden": {
                            "type": "boolean"
                        },
                        "actionName": {
                            "type": "string"
                        },
                        "connectionMetrics": {
                            "items": {
                                "$ref": "#/definitions/RunwayConnectionStatistic"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "isHidden"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwayConnectionStatistic": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayStatistic"
                },
                {
                    "properties": {
                        "transferredBytes": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "transferredBytes"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwayEndpointAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayAsset"
                },
                {
                    "properties": {
                        "osVersion": {
                            "type": "string"
                        },
                        "lastGatewayAddress": {
                            "type": "string"
                        },
                        "endpointType": {
                            "type": "string"
                        },
                        "lastThreadState": {
                            "$ref": "#/definitions/JobThreadState"
                        },
                        "organizationalUnit": {
                            "type": "string"
                        },
                        "lastThreadId": {
                            "type": "string"
                        },
                        "metaData": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        "kubernetesData": {
                            "additionalProperties": {
                                "$ref": "#/definitions/RunwayKubernetesEndpoint"
                            },
                            "type": "object"
                        },
                        "hasRunner": {
                            "type": "boolean"
                        },
                        "lastHostName": {
                            "type": "string"
                        },
                        "manufacturer": {
                            "type": "string"
                        },
                        "membershipFlag": {
                            "type": "boolean"
                        },
                        "lastIpAddress": {
                            "type": "string"
                        },
                        "preferredMacAddress": {
                            "type": "string"
                        },
                        "lastLocalName": {
                            "type": "string"
                        },
                        "osName": {
                            "type": "string"
                        },
                        "hardwareProduct": {
                            "type": "string"
                        },
                        "uniqueFingerprint": {
                            "type": "string"
                        },
                        "enrollmentOSName": {
                            "type": "string"
                        },
                        "isPendingDelete": {
                            "type": "boolean"
                        },
                        "adapters": {
                            "items": {
                                "$ref": "#/definitions/AdapterInformation"
                            },
                            "type": "array"
                        },
                        "runnerCount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "buildInformation": {
                            "type": "string"
                        },
                        "deviceType": {
                            "type": "string"
                        },
                        "hasActiveRunner": {
                            "type": "boolean"
                        },
                        "runnerAffinity": {
                            "$ref": "#/definitions/NodeAffinity"
                        },
                        "discoveryOSName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "isPendingDelete",
                        "membershipFlag",
                        "hasActiveRunner",
                        "hasRunner",
                        "runnerCount",
                        "runnerAffinity",
                        "lastThreadState"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwayGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "licensesAllocated": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "canCreateTenants": {
                            "type": "boolean"
                        },
                        "parentLicenseContainerId": {
                            "type": "string"
                        },
                        "isHidden": {
                            "type": "boolean"
                        },
                        "licensesInUse": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "parentIds": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "homeForUserId": {
                            "type": "string"
                        },
                        "portraitUrl": {
                            "type": "string"
                        },
                        "licenseExpiration": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "required": [
                        "isHidden",
                        "licensesAllocated",
                        "licensesInUse",
                        "licenseExpiration",
                        "canCreateTenants"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwayInvitation": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "roleId": {
                            "type": "string"
                        },
                        "emailAddress": {
                            "type": "string"
                        },
                        "roleName": {
                            "type": "string"
                        },
                        "userName": {
                            "type": "string"
                        },
                        "groupId": {
                            "type": "string"
                        },
                        "groupName": {
                            "type": "string"
                        },
                        "actorId": {
                            "type": "string"
                        },
                        "actorName": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "RunwayJob": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "lastThread": {
                            "$ref": "#/definitions/RunwayJobThread"
                        },
                        "totalEndpointsAssigned": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "endpointSetId": {
                            "type": "string"
                        },
                        "actions": {
                            "items": {
                                "$ref": "#/definitions/ActionInstance"
                            },
                            "type": "array"
                        },
                        "schedule": {
                            "$ref": "#/definitions/JobSchedule"
                        },
                        "jobMetrics": {
                            "items": {
                                "$ref": "#/definitions/RunwayJobStatistic"
                            },
                            "type": "array"
                        },
                        "startingActionId": {
                            "type": "string"
                        },
                        "isEnabled": {
                            "type": "boolean"
                        },
                        "totalEndpointsRunning": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "totalEndpointsFinished": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "totalEndpointsFinishedErrors": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "isHidden": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "isEnabled",
                        "isHidden",
                        "totalEndpointsFinished",
                        "totalEndpointsFinishedErrors",
                        "totalEndpointsRunning",
                        "totalEndpointsAssigned"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwayJobStatistic": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayStatistic"
                },
                {
                    "properties": {
                        "numFinished": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "numRunning": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "numSpawned": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "jobId": {
                            "type": "string"
                        },
                        "numErrors": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "numSpawned",
                        "numRunning",
                        "numFinished",
                        "numErrors"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwayJobThread": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "lastStepResult": {
                            "$ref": "#/definitions/StepResult"
                        },
                        "prodigalObjectId": {
                            "type": "string"
                        },
                        "threadState": {
                            "$ref": "#/definitions/JobThreadState"
                        },
                        "residentThread": {
                            "type": "boolean"
                        },
                        "finalResult": {
                            "$ref": "#/definitions/StepResult"
                        },
                        "nodeStepHistory": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "currentActionId": {
                            "type": "string"
                        },
                        "placementPodAffinity": {
                            "type": "string"
                        },
                        "prodigalObject": {
                            "$ref": "#/definitions/RunwayEndpointAsset"
                        },
                        "specificPlacementId": {
                            "type": "string"
                        },
                        "placementNamespaceAffinity": {
                            "type": "string"
                        },
                        "currentRunnerId": {
                            "type": "string"
                        },
                        "startingActionId": {
                            "type": "string"
                        },
                        "actions": {
                            "items": {
                                "$ref": "#/definitions/ActionInstance"
                            },
                            "type": "array"
                        },
                        "runOn": {
                            "$ref": "#/definitions/RunLocation"
                        },
                        "lastRunTime": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "sourceJobId": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "residentThread",
                        "finalResult",
                        "threadState",
                        "lastStepResult",
                        "runOn",
                        "lastRunTime"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwayKubernetesEndpoint": {
            "properties": {
                "nodeName": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunwayNode": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "isWebSocketConnected": {
                            "type": "boolean"
                        },
                        "assetName": {
                            "type": "string"
                        },
                        "affinity": {
                            "$ref": "#/definitions/NodeAffinity"
                        },
                        "clusterNamespace": {
                            "type": "string"
                        },
                        "nodeState": {
                            "$ref": "#/definitions/NodeState"
                        },
                        "lastCheckinTime": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "podName": {
                            "type": "string"
                        },
                        "containerImageName": {
                            "type": "string"
                        },
                        "assetId": {
                            "type": "string"
                        },
                        "sessions": {
                            "items": {
                                "$ref": "#/definitions/RunwaySession"
                            },
                            "type": "array"
                        },
                        "deleteAfter": {
                            "format": "time-span",
                            "type": "string"
                        },
                        "targetId": {
                            "type": "string"
                        },
                        "isPendingDissolve": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "nodeState",
                        "isWebSocketConnected",
                        "lastCheckinTime",
                        "deleteAfter",
                        "isPendingDissolve",
                        "affinity"
                    ],
                    "type": "object",
                    "x-abstract": true
                }
            ]
        },
        "RunwayObject": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "isSelected": {
                    "type": "boolean"
                },
                "revision": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "groups": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "revision",
                "isSelected"
            ],
            "type": "object",
            "x-abstract": true
        },
        "RunwayRepositoryItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "capabilities": {
                            "type": "string"
                        },
                        "license": {
                            "$ref": "#/definitions/RepositoryLicense"
                        },
                        "desiredSettings": {
                            "items": {
                                "$ref": "#/definitions/ActionSetting"
                            },
                            "type": "array"
                        },
                        "language": {
                            "type": "string"
                        },
                        "author": {
                            "type": "string"
                        },
                        "isConnectionRequired": {
                            "type": "boolean"
                        },
                        "scope": {
                            "$ref": "#/definitions/RepositoryScope"
                        },
                        "output": {
                            "type": "string"
                        },
                        "input": {
                            "type": "string"
                        },
                        "glyph": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "isConnectionRequired",
                        "license",
                        "scope"
                    ],
                    "type": "object",
                    "x-abstract": true
                }
            ]
        },
        "RunwayRole": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "groupId": {
                            "type": "string"
                        },
                        "permissions": {
                            "items": {
                                "$ref": "#/definitions/RunwayRoleAccess"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "RunwayRoleAccess": {
            "properties": {
                "accessFlags": {
                    "$ref": "#/definitions/AccessFlags"
                },
                "typeName": {
                    "type": "string"
                }
            },
            "required": [
                "accessFlags"
            ],
            "type": "object"
        },
        "RunwayRunner": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayNode"
                },
                {
                    "properties": {
                        "parentLicenseContainerId": {
                            "type": "string"
                        },
                        "isActive": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "isActive"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwaySession": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "nodeId": {
                            "type": "string"
                        },
                        "expiration": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "socketConnectionId": {
                            "type": "string"
                        },
                        "actorId": {
                            "type": "string"
                        },
                        "sessionToken": {
                            "type": "string"
                        },
                        "instanceName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "expiration"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwayStatistic": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayObject"
                },
                {
                    "properties": {
                        "statString": {
                            "type": "string"
                        },
                        "referenceObjectId": {
                            "type": "string"
                        },
                        "timestamp": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "required": [
                        "timestamp"
                    ],
                    "type": "object"
                }
            ]
        },
        "RunwayUser": {
            "allOf": [
                {
                    "$ref": "#/definitions/RunwayActor"
                },
                {
                    "properties": {
                        "portraitUrl": {
                            "type": "string"
                        },
                        "emailAddress": {
                            "type": "string"
                        },
                        "company": {
                            "type": "string"
                        },
                        "isPending": {
                            "type": "boolean"
                        },
                        "forcePasswordReset": {
                            "type": "boolean"
                        },
                        "experience": {
                            "type": "string"
                        },
                        "phone": {
                            "type": "string"
                        },
                        "expires": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "required": [
                        "expires",
                        "isPending",
                        "forcePasswordReset"
                    ],
                    "type": "object"
                }
            ]
        },
        "Shards": {
            "properties": {
                "successful": {
                    "format": "int32",
                    "type": "integer"
                },
                "total": {
                    "format": "int32",
                    "type": "integer"
                },
                "failed": {
                    "format": "int32",
                    "type": "integer"
                },
                "skipped": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "total",
                "successful",
                "skipped",
                "failed"
            ],
            "type": "object"
        },
        "SortDirection": {
            "enum": [
                "Ascending",
                "Descending"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Ascending",
                "Descending"
            ]
        },
        "StartShellSessionRequest": {
            "properties": {
                "runnerId": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StepResult": {
            "enum": [
                "Uninitialized",
                "Success",
                "Failure"
            ],
            "description": "",
            "type": "string",
            "x-enumNames": [
                "Uninitialized",
                "Success",
                "Failure"
            ]
        },
        "StepThreadRequest": {
            "properties": {
                "resultFileSize": {
                    "type": "string"
                },
                "stdOutBlobId": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "threadId": {
                    "type": "string"
                },
                "resultFilename": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TagRequest": {
            "properties": {
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "setId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TagView": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "count"
            ],
            "type": "object"
        },
        "ThreadView": {
            "properties": {
                "threadId": {
                    "type": "string"
                },
                "prodigalAssetName": {
                    "type": "string"
                },
                "settings": {
                    "items": {
                        "$ref": "#/definitions/ActionSetting"
                    },
                    "type": "array"
                },
                "connectionId": {
                    "type": "string"
                },
                "connectionName": {
                    "type": "string"
                },
                "connectionString": {
                    "type": "string"
                },
                "repositoryActionId": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                },
                "actionInstanceId": {
                    "type": "string"
                },
                "prodigalObjectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TokenResponse": {
            "properties": {
                "expiration": {
                    "format": "date-time",
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "required": [
                "expiration"
            ],
            "type": "object"
        },
        "Total": {
            "properties": {
                "relation": {
                    "type": "string"
                },
                "value": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "TriggerJobThreadRequest": {
            "properties": {
                "assetIPAddress": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                },
                "jobName": {
                    "type": "string"
                },
                "assetID": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TriggerJobThreadResponse": {
            "properties": {
                "threadId": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                },
                "jobName": {
                    "type": "string"
                },
                "prodigalObjectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateConnectionRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/CreateConnectionRequest"
                },
                {
                    "properties": {
                        "id": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "UpdateGroupRequest": {
            "properties": {
                "tenantPhoneNumber": {
                    "type": "string"
                },
                "tenantOtherDetails": {
                    "type": "string"
                },
                "licenseAllocatedRunners": {
                    "format": "int32",
                    "type": "integer"
                },
                "tenantPointOfContact": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tenantCompanyName": {
                    "type": "string"
                },
                "tenantExpiration": {
                    "type": "string"
                },
                "portraitUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "licenseCanAssignSubLicenses": {
                    "type": "boolean"
                },
                "licenseExpiration": {
                    "type": "string"
                }
            },
            "required": [
                "licenseAllocatedRunners",
                "licenseCanAssignSubLicenses"
            ],
            "type": "object"
        },
        "UpdateJobRequest": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateRoleRequest": {
            "properties": {
                "permissions": {
                    "items": {
                        "$ref": "#/definitions/RunwayRoleAccess"
                    },
                    "type": "array"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateUserRequest": {
            "properties": {
                "experience": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portraitUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "VersionResponse": {
            "properties": {
                "majorVersion": {
                    "format": "int32",
                    "type": "integer"
                },
                "minorVersion": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "majorVersion",
                "minorVersion"
            ],
            "type": "object"
        }
    }
}